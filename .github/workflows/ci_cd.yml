name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  train-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
    
    - name: Build and push Docker image
      run: |
        gcloud auth configure-docker australia-southeast1-docker.pkg.dev
        docker build -t australia-southeast1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/ml-models/ml-model:${{ github.sha }} .
        docker push australia-southeast1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/ml-models/ml-model:${{ github.sha }}
    
    - name: Train model
      env:
        WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
      run: |
        gcloud run jobs create train-model-job \
          --image australia-southeast1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/ml-models/ml-model:${{ github.sha }} \
          --args="train,--job_name,${{ github.sha }}" \
          --region australia-southeast1 \
          --set-env-vars=WANDB_API_KEY=${{ secrets.WANDB_API_KEY }}
        gcloud run jobs execute train-model-job --region australia-southeast1 --wait
    
    - name: Check if new best model
      id: check_model
      run: |
        if gsutil ls gs://your-model-bucket/best_model/model.joblib | grep -q .; then
          echo "::set-output name=deploy::true"
        else
          echo "::set-output name=deploy::false"
        fi
    
    - name: Deploy to Cloud Run
      if: steps.check_model.outputs.deploy == 'true'
      run: |
        gcloud run deploy ml-model \
          --image australia-southeast1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/ml-models/ml-model:${{ github.sha }} \
          --command="serve" \
          --platform managed \
          --region australia-southeast1 \
          --allow-unauthenticated

    - name: View Cloud Run logs
      if: failure()
      run: |
        gcloud run logs read ml-model --region australia-southeast1 --limit=50
    
    - name: Test deployed model
      run: |
        CLOUD_RUN_URL=$(gcloud run services describe ml-model --region australia-southeast1 --format 'value(status.url)')
        curl -X POST -H "Content-Type: application/json" -d '{"features": [0.00632, 18.0, 2.31, 0, 0.538, 6.575, 65.2, 4.09, 1, 296.0, 15.3, 396.9, 4.98]}' ${CLOUD_RUN_URL}/predict
